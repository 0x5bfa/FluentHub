<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountSettingsButton.Text" xml:space="preserve">
    <value>アカウント設定</value>
  </data>
  <data name="AppearancePageColorBlock.Title" xml:space="preserve">
    <value>色の選択</value>
  </data>
  <data name="AppearancePageGeneralHeader.Text" xml:space="preserve">
    <value>一般</value>
  </data>
  <data name="AppearancePageHeader.Text" xml:space="preserve">
    <value>外観</value>
  </data>
  <data name="AppearancePageLocaleBlock.Title" xml:space="preserve">
    <value>言語</value>
  </data>
  <data name="AppearancePageLocaleHeader.Text" xml:space="preserve">
    <value>言語</value>
  </data>
  <data name="AppearancePageThemeBlock.Title" xml:space="preserve">
    <value>カスタムテーマ</value>
  </data>
  <data name="FeatureNotAvailable.Text" xml:space="preserve">
    <value>まだ利用できません</value>
  </data>
  <data name="FeedsPageHeader.Text" xml:space="preserve">
    <value>アクティビティ</value>
  </data>
  <data name="FeedsPageNoRecentActivityBody.Text" xml:space="preserve">
    <value>最近のアクティビティはありません。</value>
  </data>
  <data name="FifthStepToAuthorize.Text" xml:space="preserve">
    <value>FluentHub に移動します。</value>
  </data>
  <data name="FirstStepToAuthorize.Text" xml:space="preserve">
    <value>「GitHub でログイン」をクリックする。</value>
  </data>
  <data name="ForthStepToAuthorize.Text" xml:space="preserve">
    <value>「FluentHub DEV を開く」をクリックします。</value>
  </data>
  <data name="GoBackButton.TooltipService.Tooltip" xml:space="preserve">
    <value>戻る</value>
  </data>
  <data name="GoForwardButton.TooltipService.Tooltip" xml:space="preserve">
    <value>進む</value>
  </data>
  <data name="HomePageFavoritesHeader.Text" xml:space="preserve">
    <value>お気に入り</value>
  </data>
  <data name="HomePageFavoritesNotAvailableBody.Text" xml:space="preserve">
    <value>お気に入りのアイテムは使用できません。</value>
  </data>
  <data name="HomePageGeneralHeader.Text" xml:space="preserve">
    <value>ワーク</value>
  </data>
  <data name="HomePageHeader.Text" xml:space="preserve">
    <value>ホーム</value>
  </data>
  <data name="HomePageRecentActivityHeader.Text" xml:space="preserve">
    <value>最近</value>
  </data>
  <data name="IntroDocumentationLink.Content" xml:space="preserve">
    <value>ドキュメント</value>
  </data>
  <data name="IntroHeader.Text" xml:space="preserve">
    <value>FluentHub を認証する</value>
  </data>
  <data name="LoginWithGitHub.Content" xml:space="preserve">
    <value>GitHub でログイン</value>
  </data>
  <data name="NewMutation.Text" xml:space="preserve">
    <value>新規</value>
  </data>
  <data name="NewMutationOrganizationButton.Text" xml:space="preserve">
    <value>新しい組織</value>
  </data>
  <data name="NewMutationRepoButton.Text" xml:space="preserve">
    <value>新しいリポジトリ</value>
  </data>
  <data name="NotificationsPageFilterByReasonAssigned.Text" xml:space="preserve">
    <value>📋 割り当て済み</value>
  </data>
  <data name="NotificationsPageFilterByReasonDone.Text" xml:space="preserve">
    <value>完了</value>
  </data>
  <data name="NotificationsPageFilterByReasonFlyoutBody.Text" xml:space="preserve">
    <value>フィルタ：</value>
  </data>
  <data name="NotificationsPageFilterByReasonInbox.Text" xml:space="preserve">
    <value>受信トレイ</value>
  </data>
  <data name="NotificationsPageFilterByReasonMentioned.Text" xml:space="preserve">
    <value>✉️ メンション済み</value>
  </data>
  <data name="NotificationsPageFilterByReasonMentionedTeam.Text" xml:space="preserve">
    <value>📧メンションされたチーム</value>
  </data>
  <data name="NotificationsPageFilterByReasonParticipating.Text" xml:space="preserve">
    <value>🤝 参加中</value>
  </data>
  <data name="NotificationsPageFilterByReasonReview.Text" xml:space="preserve">
    <value>👀 リクエストされたレビュー</value>
  </data>
  <data name="NotificationsPageFilterByReasonSaved.Text" xml:space="preserve">
    <value>保存済み</value>
  </data>
  <data name="NotificationsPageGroupByViewFlyoutBody.Text" xml:space="preserve">
    <value>グループ化:</value>
  </data>
  <data name="NotificationsPageGroupByViewNone.Text" xml:space="preserve">
    <value>なし</value>
  </data>
  <data name="NotificationsPageGroupByViewPrimaryDate.Text" xml:space="preserve">
    <value>日付</value>
  </data>
  <data name="NotificationsPageGroupByViewRepository.Text" xml:space="preserve">
    <value>リポジトリ</value>
  </data>
  <data name="NotificationsPageHeader.Text" xml:space="preserve">
    <value>通知</value>
  </data>
  <data name="NotificationsPageNoRecentNotificationsBody.Text" xml:space="preserve">
    <value>最近の通知がありません。</value>
  </data>
  <data name="NotificationsPageSearchBar.PlaceholderText" xml:space="preserve">
    <value>通知を検索</value>
  </data>
  <data name="NotificationsPageUnreadToggle.Content" xml:space="preserve">
    <value>未読</value>
  </data>
  <data name="RefreshBody.Text" xml:space="preserve">
    <value>再読み込み</value>
  </data>
  <data name="RepositoriesListHeader.Text" xml:space="preserve">
    <value>リポジトリ</value>
  </data>
  <data name="SearchBar.PlaceholderText" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="SearchBarButton.TooltipService.Tooltip" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="SecondStepToAuthorize.Text" xml:space="preserve">
    <value>1 つ以上の組織を管理している場合は、FluentHub からアクセスできるようにしてください。</value>
  </data>
  <data name="SettingsButton.Text" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="SettingsFeedbackButton.Content" xml:space="preserve">
    <value>フィードバック</value>
  </data>
  <data name="SettingsGetHelpButton.Content" xml:space="preserve">
    <value>ヘルプを得る</value>
  </data>
  <data name="SignOutButton.Text" xml:space="preserve">
    <value>サイン アウト</value>
  </data>
  <data name="SwitchAccountFlyoutSub.Text" xml:space="preserve">
    <value>アカウントの切り替え</value>
  </data>
  <data name="ThirdStepToAuthorize.Text" xml:space="preserve">
    <value>"Authorize FluentHub" をクリックしてください。</value>
  </data>
  <data name="UserDiscussionsButton.Text" xml:space="preserve">
    <value>ディスカッション</value>
  </data>
  <data name="UserIssuesButton.Text" xml:space="preserve">
    <value>Issue</value>
  </data>
  <data name="UserOrganizationsButton.Text" xml:space="preserve">
    <value>Organization</value>
  </data>
  <data name="UserProfileButton.Text" xml:space="preserve">
    <value>プロフィール</value>
  </data>
  <data name="UserPullRequestsButton.Text" xml:space="preserve">
    <value>Your pull requests</value>
  </data>
  <data name="UserRepositoriesButton.Text" xml:space="preserve">
    <value>Your repositories</value>
  </data>
  <data name="UserStarsButton.Text" xml:space="preserve">
    <value>Your stars</value>
  </data>
</root>