# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

steps:

- task: PowerShell@2
  displayName: 'Canonicalize package manifest'
  inputs:
    targetType: 'inline'
    script: |
      [xml]$xmlDoc = Get-Content $(Build.SourcesDirectory)\FluentHub\Package.appxmanifest
      $xmlDoc.Package.Identity.Name="FluentHub"
      $xmlDoc.Package.Identity.Publisher="CN=fluenthub-uwp"
      $xmlDoc.Package.Properties.DisplayName="FluentHub"
      $xmlDoc.Package.Applications.Application.VisualElements.DisplayName="FluentHub"
      $xmlDoc.Save('$(Build.SourcesDirectory)\FluentHub\Package.appxmanifest')
    failOnStderr: true

- task: NuGetToolInstaller@1

- task: DownloadSecureFile@1
  name: CredentialSecureFile
  inputs:
    secureFile: AppCredentials.config

- task: CopyFiles
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    Contents: '$(CredentialSecureFile.secureFilePath)'
    TargetFolder: '$(Build.SourcesDirectory)\FluentHub'

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    platform: 'x86'
    solution: '$(solution)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'
