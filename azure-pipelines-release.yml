trigger: none
pr: none

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x86|x64'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

jobs:
- job: SideloadRelease
  timeoutInMinutes: 120
  steps:
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        [xml]$xmlDoc = Get-Content $(Build.SourcesDirectory)\src\FluentHub.Package\Package.appxmanifest
        $xmlDoc.Package.Identity.Name="FluentHub"
        $xmlDoc.Package.Identity.Publisher="FluentHub"
        $xmlDoc.Package.Properties.DisplayName="FluentHub"
        $xmlDoc.Package.Applications.Application.VisualElements.DisplayName="FluentHub"
        $xmlDoc.Save('$(Build.SourcesDirectory)\src\FluentHub.Package\Package.appxmanifest')
      failOnStderr: true

  - task: PowerShell@2
    displayName: 'Use Release Logo'
    inputs:
      targetType: 'inline'
      script: |
        gci $(Build.SourcesDirectory)\src -Include *.csproj, *.appxmanifest, *.wapproj -recurse | ForEach -Process {
        (Get-Content $_ -Raw | ForEach -Process {$_ -replace "Assets\\AppTilesDev", "Assets\AppTiles"}) | Set-Content $_ -NoNewline
        }
      failOnStderr: true

  - task: DownloadSecureFile@1
    name: CredentialSecureFile
    inputs:
     secureFile: AppCredentials.config

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Agent.TempDirectory)'
      Contents: '$(CredentialSecureFile.secureFilePath)'
      TargetFolder: '$(Build.SourcesDirectory)\FluentHub'
      overWrite: true


